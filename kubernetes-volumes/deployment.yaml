apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  labels:
    app: my-app
spec:
  replicas: 1
#  strategy:
#    type: RollingUpdate
#    rollingUpdate:
#      maxUnavailable: 1
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      name: my-app
      labels:
        app: my-app
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: homework
                    operator: In
                    values:
                      - "true"
      volumes:
        - name: config-volume
          configMap:
            name: nginx-config
        - name: html
          persistentVolumeClaim:
            claimName: my-pvc
        - name: cm-volume
          configMap:
            name: my-cm
      initContainers:
        - name: init
          image: busybox:1.28
#          command: ["/bin/sh"]
#          args: ["-c", "trap : TERM INT; sleep infinity & wait"]
          volumeMounts:
            - mountPath: /init
              name: html
          command: [ 'wget', '-O', '/init/index.html','http://ya.ru' ]
      containers:
        - name: my-container
          image: nginx:latest
          volumeMounts:
            - mountPath: /homework/
              name: html
#            - mountPath: /etc/nginx/conf.d
#              name: config-volume
#            - mountPath: /homework/file
#              name: cm-volume
#          lifecycle:
#            preStop:
#              exec:
#                command: [ '/bin/sh', '-c', 'rm -f /homework/index.html' ]
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8000
          ports:
            - containerPort: 8000
              protocol: TCP